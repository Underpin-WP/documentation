"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[216],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=o.createContext({}),s=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return o.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(n),f=r,b=p["".concat(a,".").concat(f)]||p[f]||u[f]||i;return n?o.createElement(b,l(l({ref:t},m),{},{components:n})):o.createElement(b,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var s=2;s<i;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6008:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const i={},l="Mutable Collection With Remove",c={unversionedId:"reference/registries/object-registries/collections/mutable-collection-with-remove",id:"reference/registries/object-registries/collections/mutable-collection-with-remove",title:"Mutable Collection With Remove",description:"MutableCollectionWith_Remove is an implementation of Collection. Unlike an immutable collection, items can always be added, and removed from the collection at any time, and unlike a mutable collection, items can be directly removed from this collection, as well.",source:"@site/docs/reference/registries/object-registries/collections/mutable-collection-with-remove.md",sourceDirName:"reference/registries/object-registries/collections",slug:"/reference/registries/object-registries/collections/mutable-collection-with-remove",permalink:"/reference/registries/object-registries/collections/mutable-collection-with-remove",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Immutable Collection",permalink:"/reference/registries/object-registries/collections/immutable-collection"},next:{title:"Mutable Collection",permalink:"/reference/registries/object-registries/collections/mutable-collection"}},a={},s=[{value:"Removing Items",id:"removing-items",level:2}],m={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mutable-collection-with-remove"},"Mutable Collection With Remove"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Mutable_Collection_With_Remove")," is an implementation of ",(0,r.kt)("a",{parentName:"p",href:"./"},"Collection"),". Unlike an ",(0,r.kt)("a",{parentName:"p",href:"./immutable-collection"},"immutable collection"),", items can always be added, and removed from the collection at any time, and unlike a ",(0,r.kt)("a",{parentName:"p",href:"./mutable-collection"},"mutable collection"),", items can be directly removed from this collection, as well."),(0,r.kt)("h2",{id:"removing-items"},"Removing Items"),(0,r.kt)("p",null,"To remove an item from a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mutable_Collection_With_Remove"),", use the ",(0,r.kt)("inlineCode",{parentName:"p"},"remove")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use \\Underpin\\Registries\\Immutable_Collection;\nuse \\Underpin\\Interfaces\\Identifiable_Int;\nclass Blog_Post implements Identifiable_Int {\n  public function __construct(protected int $id){\n  \n  }\n  \n  public function get_id() : ?int{\n    return $this->id;\n  }\n}\n\n$collection = Immutable_Collection::make(Blog_Post::class)->seed([\n  new Blog_Post(1),\n  new Blog_Post(2),\n  new Blog_Post(3),\n  new Blog_Post(4),\n  new Blog_Post(5),\n]);\n\n// Remove blog post 3 from the list\n$collection->remove(3);\n")))}u.isMDXComponent=!0}}]);